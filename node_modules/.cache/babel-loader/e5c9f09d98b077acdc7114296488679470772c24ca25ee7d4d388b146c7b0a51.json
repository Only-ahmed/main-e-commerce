{"ast":null,"code":"import { Categories, ProductsPage } from '../../../Data/data';\n\n// export const action1 = (dispatch, test1, test2) => {\n//     let NewArray = 0\n//     if (test1) {\n//         NewArray += 1\n//     } else if (test2) {\n//         NewArray -= 1\n//     }\n//     dispatch({ type: 'action1', payload: console.log(NewArray) })\n// }\n\n// export const appearCat = (dispatch, Cat) => {\n//     const NewArray = []\n//     for (let i in Cat) {\n//         for (let f in Cat[i]) {\n//             for (let g in Cat[i][f]) {\n//                 NewArray.push(Cat[i][f][g])\n//                 dispatch({ type: 'supermarket', Cat: Categories.supermarket })\n//                 dispatch({ type: 'Fashion', Cat2: Categories.Fashion })\n//                 dispatch({ type: 'HealthBeauty', Cat3: Categories.Fashion })\n//             }\n//         }\n//     }\n// }\n\nexport const appearCat = () => async dispatch => {\n  try {\n    await axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=199e5acf40ec40badd6f5f3942ed561c&language=en-US`).then(respond => {\n      dispatch({\n        type: \"FETCH_VIDEOS\",\n        payload: respond.data.results\n      });\n      // console.log(\"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\", respond.data.results);\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n};","map":{"version":3,"names":["Categories","ProductsPage","appearCat","dispatch","axios","get","then","respond","type","payload","data","results","error","console","log"],"sources":["C:/Users/Ahmed/Desktop/مكررات/e-commerce/src/components/redux/actions/ReduxActions.js"],"sourcesContent":["import { Categories, ProductsPage, } from '../../../Data/data'\r\n\r\n\r\n\r\n// export const action1 = (dispatch, test1, test2) => {\r\n//     let NewArray = 0\r\n//     if (test1) {\r\n//         NewArray += 1\r\n//     } else if (test2) {\r\n//         NewArray -= 1\r\n//     }\r\n//     dispatch({ type: 'action1', payload: console.log(NewArray) })\r\n// }\r\n\r\n// export const appearCat = (dispatch, Cat) => {\r\n//     const NewArray = []\r\n//     for (let i in Cat) {\r\n//         for (let f in Cat[i]) {\r\n//             for (let g in Cat[i][f]) {\r\n//                 NewArray.push(Cat[i][f][g])\r\n//                 dispatch({ type: 'supermarket', Cat: Categories.supermarket })\r\n//                 dispatch({ type: 'Fashion', Cat2: Categories.Fashion })\r\n//                 dispatch({ type: 'HealthBeauty', Cat3: Categories.Fashion })\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const appearCat = () => async (dispatch) => {\r\n\r\n    try {\r\n        await axios.get(\r\n            `https://api.themoviedb.org/3/movie/top_rated?api_key=199e5acf40ec40badd6f5f3942ed561c&language=en-US`\r\n        )\r\n            .then((respond) => {\r\n                dispatch({ type: \"FETCH_VIDEOS\", payload: respond.data.results });\r\n                // console.log(\"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\", respond.data.results);\r\n            });\r\n    } catch (error) {\r\n        console.log(\"error\", error);\r\n    }\r\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,YAAY,QAAS,oBAAoB;;AAI9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAE/C,IAAI;IACA,MAAMC,KAAK,CAACC,GAAG,CACX,sGACJ,CAAC,CACIC,IAAI,CAAEC,OAAO,IAAK;MACfJ,QAAQ,CAAC;QAAEK,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEF,OAAO,CAACG,IAAI,CAACC;MAAQ,CAAC,CAAC;MACjE;IACJ,CAAC,CAAC;EACV,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;EAC/B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}