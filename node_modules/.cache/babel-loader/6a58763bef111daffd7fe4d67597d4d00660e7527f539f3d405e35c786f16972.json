{"ast":null,"code":"import { Categories, ProductsPage } from '../../../Data/data';\n\n// export const action1 = (dispatch, test1, test2) => {\n//     let NewArray = 0\n//     if (test1) {\n//         NewArray += 1\n//     } else if (test2) {\n//         NewArray -= 1\n//     }\n//     dispatch({ type: 'action1', payload: console.log(NewArray) })\n// }\n\nexport const appearCat = (dispatch, Cat) => {\n  return;\n  const NewArray = [];\n  for (let i in Cat) {\n    for (let f in Cat[i]) {\n      for (let g in Cat[i][f]) {\n        NewArray.push(Cat[i][f][g]);\n        dispatch({\n          type: 'supermarket',\n          Cat: Categories.supermarket\n        });\n        dispatch({\n          type: 'Fashion',\n          Cat2: Categories.Fashion\n        });\n        dispatch({\n          type: 'HealthBeauty',\n          Cat3: Categories.Fashion\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Categories","ProductsPage","appearCat","dispatch","Cat","NewArray","i","f","g","push","type","supermarket","Cat2","Fashion","Cat3"],"sources":["C:/Users/Ahmed/Desktop/مكررات/e-commerce/src/components/redux/actions/ReduxActions.js"],"sourcesContent":["import { Categories, ProductsPage, } from '../../../Data/data'\r\n\r\n\r\n\r\n// export const action1 = (dispatch, test1, test2) => {\r\n//     let NewArray = 0\r\n//     if (test1) {\r\n//         NewArray += 1\r\n//     } else if (test2) {\r\n//         NewArray -= 1\r\n//     }\r\n//     dispatch({ type: 'action1', payload: console.log(NewArray) })\r\n// }\r\n\r\nexport const appearCat = (dispatch, Cat) => {\r\n  return\r\n    const NewArray = []\r\n    for (let i in Cat) {\r\n        for (let f in Cat[i]) {\r\n            for (let g in Cat[i][f]) {\r\n                NewArray.push(Cat[i][f][g])\r\n                dispatch({ type: 'supermarket', Cat: Categories.supermarket })\r\n                dispatch({ type: 'Fashion', Cat2: Categories.Fashion })\r\n                dispatch({ type: 'HealthBeauty', Cat3: Categories.Fashion })\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,YAAY,QAAS,oBAAoB;;AAI9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGA,CAACC,QAAQ,EAAEC,GAAG,KAAK;EAC1C;EACE,MAAMC,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIC,CAAC,IAAIF,GAAG,EAAE;IACf,KAAK,IAAIG,CAAC,IAAIH,GAAG,CAACE,CAAC,CAAC,EAAE;MAClB,KAAK,IAAIE,CAAC,IAAIJ,GAAG,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,EAAE;QACrBF,QAAQ,CAACI,IAAI,CAACL,GAAG,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC;QAC3BL,QAAQ,CAAC;UAAEO,IAAI,EAAE,aAAa;UAAEN,GAAG,EAAEJ,UAAU,CAACW;QAAY,CAAC,CAAC;QAC9DR,QAAQ,CAAC;UAAEO,IAAI,EAAE,SAAS;UAAEE,IAAI,EAAEZ,UAAU,CAACa;QAAQ,CAAC,CAAC;QACvDV,QAAQ,CAAC;UAAEO,IAAI,EAAE,cAAc;UAAEI,IAAI,EAAEd,UAAU,CAACa;QAAQ,CAAC,CAAC;MAChE;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}