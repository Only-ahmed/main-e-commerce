{"ast":null,"code":"import { Categories, ProductsPage } from '../../../Data/data';\n\n// export const action1 = (dispatch, test1, test2) => {\n//     let NewArray = 0\n//     if (test1) {\n//         NewArray += 1\n//     } else if (test2) {\n//         NewArray -= 1\n//     }\n//     dispatch({ type: 'action1', payload: console.log(NewArray) })\n// }\n\n// export const appearCat = (dispatch, Cat) => {\n//     const NewArray = []\n//     for (let i in Cat) {\n//         for (let f in Cat[i]) {\n//             for (let g in Cat[i][f]) {\n//                 NewArray.push(Cat[i][f][g])\n//                 dispatch({ type: 'supermarket', Cat: Categories.supermarket })\n//                 dispatch({ type: 'Fashion', Cat2: Categories.Fashion })\n//                 dispatch({ type: 'HealthBeauty', Cat3: Categories.Fashion })\n//             }\n//         }\n//     }\n// }\n\nexport function appearCat(Cat) {\n  return function (dispatch) {\n    const NewArray = [];\n    for (let i in Cat) {\n      for (let f in Cat[i]) {\n        for (let g in Cat[i][f]) {\n          NewArray.push(Cat[i][f][g]);\n          dispatch({\n            type: 'supermarket',\n            payload: Categories.supermarket\n          });\n          // dispatch({ type: 'Fashion', Cat2: Categories.Fashion })\n          // dispatch({ type: 'HealthBeauty', Cat3: Categories.Fashion })\n        }\n      }\n    }\n    dispatch({\n      type: 'supermarket',\n      Cat\n    });\n  };\n}","map":{"version":3,"names":["Categories","ProductsPage","appearCat","Cat","dispatch","NewArray","i","f","g","push","type","payload","supermarket"],"sources":["C:/Users/Ahmed/Desktop/مكررات/e-commerce/src/components/redux/actions/ReduxActions.js"],"sourcesContent":["import { Categories, ProductsPage, } from '../../../Data/data'\r\n\r\n\r\n\r\n// export const action1 = (dispatch, test1, test2) => {\r\n//     let NewArray = 0\r\n//     if (test1) {\r\n//         NewArray += 1\r\n//     } else if (test2) {\r\n//         NewArray -= 1\r\n//     }\r\n//     dispatch({ type: 'action1', payload: console.log(NewArray) })\r\n// }\r\n\r\n// export const appearCat = (dispatch, Cat) => {\r\n//     const NewArray = []\r\n//     for (let i in Cat) {\r\n//         for (let f in Cat[i]) {\r\n//             for (let g in Cat[i][f]) {\r\n//                 NewArray.push(Cat[i][f][g])\r\n//                 dispatch({ type: 'supermarket', Cat: Categories.supermarket })\r\n//                 dispatch({ type: 'Fashion', Cat2: Categories.Fashion })\r\n//                 dispatch({ type: 'HealthBeauty', Cat3: Categories.Fashion })\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport function appearCat(Cat) {\r\n    return function (dispatch) {\r\n        const NewArray = []\r\n        for (let i in Cat) {\r\n            for (let f in Cat[i]) {\r\n                for (let g in Cat[i][f]) {\r\n                    NewArray.push(Cat[i][f][g])\r\n                    dispatch({ type: 'supermarket', payload: Categories.supermarket })\r\n                    // dispatch({ type: 'Fashion', Cat2: Categories.Fashion })\r\n                    // dispatch({ type: 'HealthBeauty', Cat3: Categories.Fashion })\r\n                }\r\n            }\r\n        }\r\n        dispatch({\r\n            type: 'supermarket',\r\n            Cat\r\n        });\r\n    };\r\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,YAAY,QAAS,oBAAoB;;AAI9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,SAASA,CAACC,GAAG,EAAE;EAC3B,OAAO,UAAUC,QAAQ,EAAE;IACvB,MAAMC,QAAQ,GAAG,EAAE;IACnB,KAAK,IAAIC,CAAC,IAAIH,GAAG,EAAE;MACf,KAAK,IAAII,CAAC,IAAIJ,GAAG,CAACG,CAAC,CAAC,EAAE;QAClB,KAAK,IAAIE,CAAC,IAAIL,GAAG,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,EAAE;UACrBF,QAAQ,CAACI,IAAI,CAACN,GAAG,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC;UAC3BJ,QAAQ,CAAC;YAAEM,IAAI,EAAE,aAAa;YAAEC,OAAO,EAAEX,UAAU,CAACY;UAAY,CAAC,CAAC;UAClE;UACA;QACJ;MACJ;IACJ;IACAR,QAAQ,CAAC;MACLM,IAAI,EAAE,aAAa;MACnBP;IACJ,CAAC,CAAC;EACN,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}